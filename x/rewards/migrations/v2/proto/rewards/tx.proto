syntax = "proto3";
package gitopia.gitopia.rewards;

import "gogoproto/gogo.proto";
import "rewards/rewards.proto";
import "cosmos/base/v1beta1/coin.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/gitopia/gitopia/x/rewards/types";

// Msg defines the Msg service.
service Msg {
  rpc Claim(MsgClaim) returns (MsgClaimResponse);
  rpc CreateReward(MsgCreateReward) returns (MsgCreateRewardResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateReward {
  string creator = 1;
  string recipient = 2;

  cosmos.base.v1beta1.Coin amount = 3
  [(gogoproto.nullable) = false, 
  (gogoproto.castkey) = "github.com/cosmos/cosmos-sdk/types.Coin"]; 
}
message MsgCreateRewardResponse {
  // actual granted amount
  cosmos.base.v1beta1.Coin amount = 1 
  [(gogoproto.nullable) = false, 
  (gogoproto.castkey) = "github.com/cosmos/cosmos-sdk/types.Coin"]; 
}

// this line is used by starport scaffolding # proto/tx/message
message MsgClaim {
  string creator = 1;
}

message MsgClaimResponse {
}

